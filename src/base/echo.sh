#!/bin/bash
# echo使用

# 1.普通字符串输出
echo "it is a test"
echo it is a test

# 2.转义字符串输出
echo "\"it is a test\""
echo \"it is a test\"

# 3.显示变量
# read 命令一个一个词组地接收输入的参数，每个词组需要使用空格进行分隔；如果输入的词组个数大于需要的参数个数，则多出的词组将被作为整体为最后一个参数接收。
# 参数说明：
#  -p 输入提示文字
#  -n 输入字符长度限制(达到6位，自动结束)
#  -t 输入限时
#  -s 隐藏输入内容
# read name # read从标准输入中读取一行，并输入一行的每个字段的值指定给shell变量
echo "${name}:it is a test"
read v1 v2
echo "第一个参数：${v1},第二个参数：${v2}"
read -p 请输入一段文字： -n 6 -t 10 -s password
echo -e "\npassword is ${password}"
read -p 请输入一段文字： -n 6 -t 10 pwd
echo -e "\npwd is ${pwd}"

# 4.显示换行
echo "ok \n"
echo -e "ok \n"

# 5.显示不换行 \c不换行
echo -e "OK \c"
echo "hello world."

# 6.显示结果定向至文件
# echo "hello world" > /Users/rock/mytest
# > 重定向输出到某个位置，替换原有文件的所有内容。
# >> 重定向追加到某个位置，在原有文件的末尾添加内容。
# < 重定向输入某个位置文件。
# 2> 重定向错误输出。
# 2>> 重定向错误追加输出到文件末尾。
# &> 混合输出错误的和正确的都输出。

# 7.原样输出字符串
echo -e '${name}\"' # 加不加-e都不会对输出有影响

# 8.显示命令执行
echo `date` # 这里是反引号``，不是单引号''
echo `ps`



# echo输出的字符串总结
# ===================================================================
#        能否引用变量  |  能否引用转移符  |  能否引用文本格式符(如：换行符、制表符)
# 单引号  |      否    |      否       |               否
# 双引号  |      能    |      能       |               能
# 无引号  |      能    |      能       |               否                          
# ===================================================================